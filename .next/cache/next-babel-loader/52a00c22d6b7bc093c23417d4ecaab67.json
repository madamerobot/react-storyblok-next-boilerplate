{"ast":null,"code":"var _jsxFileName = \"/Users/victoriatholerus/Documents/cool-prdject/react-storyblok-next-boilerplate/pages/[page].js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\n\n/* ðŸŒˆ This is the client side ðŸŒˆ*/\n\n/* dependencies */\nimport fetch from \"isomorphic-unfetch\";\n/* layout */\n\nimport DefaultLayout from \"../components/layouts/DefaultLayout\";\n/* components */\n\nimport HeadlineModule from \"../components/modules/HeadlineModule\";\nimport ParagraphModule from \"../components/modules/ParagraphModule\";\n/* Helper function to fetch data - do we need this as an extra function? Debatable. ðŸ˜Š */\n\nfunction fetchUrl(url) {\n  return fetch(url).then(r => r.json());\n}\n/* This route gets hit when our user appends a slug to\nthe url and therefore the page request, e.g. your-site.com/about */\n\n\nconst SlugPage = ({\n  data\n}) => {\n  const {\n    content\n  } = data;\n  console.log(`ðŸŒˆ I am getting this content from Storybok`);\n  console.log(content);\n  const codeString = JSON.stringify(content);\n  /* Now you need to map your own components, I just left the headline module as reference */\n\n  return __jsx(DefaultLayout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"h3\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"\\uD83C\\uDF08 This is what you are getting back from Storyblok: \\uD83C\\uDF08\"), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }, codeString));\n};\n/* Before rendering, we are calling our internal API endpoint (server).\nThis call is hitting the code we wrote in 'pages/api/page/[slug].js' */\n\n\nSlugPage.getInitialProps = async ({\n  query\n}) => {\n  /* {query} is an object we receive within this method from Next,\n  so that we can retrieve the slug (e.g. '/welcome') coming with the route */\n  const {\n    page\n  } = query;\n  /* Calling our internal api endpoint so that we can fetch Storyblok content\n  server-side (we are on client-side here) */\n\n  const data = await fetchUrl(`http://localhost:3000/api/page/${page}`);\n  /* Returning the data back into SlugPage as props */\n\n  return {\n    data\n  };\n  /* This is the same as { data: data } */\n};\n\nexport default SlugPage;","map":{"version":3,"sources":["/Users/victoriatholerus/Documents/cool-prdject/react-storyblok-next-boilerplate/pages/[page].js"],"names":["fetch","DefaultLayout","HeadlineModule","ParagraphModule","fetchUrl","url","then","r","json","SlugPage","data","content","console","log","codeString","JSON","stringify","getInitialProps","query","page"],"mappings":";;;;AAAA;;AAEA;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AAEA;;AACA,OAAOC,aAAP,MAA0B,qCAA1B;AAEA;;AACA,OAAOC,cAAP,MAA2B,sCAA3B;AACA,OAAOC,eAAP,MAA4B,uCAA5B;AAEA;;AACA,SAASC,QAAT,CAAkBC,GAAlB,EAAuB;AACrB,SAAOL,KAAK,CAACK,GAAD,CAAL,CAAWC,IAAX,CAAgBC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAArB,CAAP;AACD;AAED;;;;AAEA,MAAMC,QAAQ,GAAG,CAAC;AAACC,EAAAA;AAAD,CAAD,KAAY;AAC3B,QAAM;AAACC,IAAAA;AAAD,MAAYD,IAAlB;AACAE,EAAAA,OAAO,CAACC,GAAR,CAAa,4CAAb;AACAD,EAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACA,QAAMG,UAAU,GAAGC,IAAI,CAACC,SAAL,CAAeL,OAAf,CAAnB;AACA;;AACA,SACE,MAAC,aAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mFADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIG,UAAJ,CAFF,CADF;AAOD,CAbD;AAeA;;;;AAEAL,QAAQ,CAACQ,eAAT,GAA2B,OAAO;AAACC,EAAAA;AAAD,CAAP,KAAmB;AAC5C;;AAEA,QAAM;AAACC,IAAAA;AAAD,MAASD,KAAf;AACA;;;AAEA,QAAMR,IAAI,GAAG,MAAMN,QAAQ,CAAE,kCAAiCe,IAAK,EAAxC,CAA3B;AACA;;AACA,SAAO;AAACT,IAAAA;AAAD,GAAP;AAAc;AACf,CATD;;AAWA,eAAeD,QAAf","sourcesContent":["/* ðŸŒˆ This is the client side ðŸŒˆ*/\n\n/* dependencies */\nimport fetch from \"isomorphic-unfetch\"\n\n/* layout */\nimport DefaultLayout from \"../components/layouts/DefaultLayout\"\n\n/* components */\nimport HeadlineModule from \"../components/modules/HeadlineModule\"\nimport ParagraphModule from \"../components/modules/ParagraphModule\"\n\n/* Helper function to fetch data - do we need this as an extra function? Debatable. ðŸ˜Š */\nfunction fetchUrl(url) {\n  return fetch(url).then(r => r.json())\n}\n\n/* This route gets hit when our user appends a slug to\nthe url and therefore the page request, e.g. your-site.com/about */\nconst SlugPage = ({data}) => {\n  const {content} = data\n  console.log(`ðŸŒˆ I am getting this content from Storybok`)\n  console.log(content)\n  const codeString = JSON.stringify(content)\n  /* Now you need to map your own components, I just left the headline module as reference */\n  return (\n    <DefaultLayout>\n      <h3>ðŸŒˆ This is what you are getting back from Storyblok: ðŸŒˆ</h3>\n      <p>{codeString}</p>\n      {/* {headlineModuleData ? <HeadlineModule title={headlineModuleData.title} /> : null} */}\n    </DefaultLayout>\n  )\n}\n\n/* Before rendering, we are calling our internal API endpoint (server).\nThis call is hitting the code we wrote in 'pages/api/page/[slug].js' */\nSlugPage.getInitialProps = async ({query}) => {\n  /* {query} is an object we receive within this method from Next,\n\tso that we can retrieve the slug (e.g. '/welcome') coming with the route */\n  const {page} = query\n  /* Calling our internal api endpoint so that we can fetch Storyblok content\n\tserver-side (we are on client-side here) */\n  const data = await fetchUrl(`http://localhost:3000/api/page/${page}`)\n  /* Returning the data back into SlugPage as props */\n  return {data} /* This is the same as { data: data } */\n}\n\nexport default SlugPage\n"]},"metadata":{},"sourceType":"module"}